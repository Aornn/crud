// Code generated by MockGen. DO NOT EDIT.
// Source: get.go

// Package getlist_test is a generated GoMock package.
package getlist_test

import (
	pkg "crud/pkg"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	zap "go.uber.org/zap"
)

// MockiGetList is a mock of iGetList interface.
type MockiGetList struct {
	ctrl     *gomock.Controller
	recorder *MockiGetListMockRecorder
}

// MockiGetListMockRecorder is the mock recorder for MockiGetList.
type MockiGetListMockRecorder struct {
	mock *MockiGetList
}

// NewMockiGetList creates a new mock instance.
func NewMockiGetList(ctrl *gomock.Controller) *MockiGetList {
	mock := &MockiGetList{ctrl: ctrl}
	mock.recorder = &MockiGetListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiGetList) EXPECT() *MockiGetListMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockiGetList) Process(l *zap.Logger) ([]*pkg.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", l)
	ret0, _ := ret[0].([]*pkg.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Process indicates an expected call of Process.
func (mr *MockiGetListMockRecorder) Process(l interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockiGetList)(nil).Process), l)
}
