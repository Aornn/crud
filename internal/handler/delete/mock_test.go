// Code generated by MockGen. DO NOT EDIT.
// Source: delete.go

// Package delete_test is a generated GoMock package.
package delete_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	zap "go.uber.org/zap"
)

// MockiDelUser is a mock of iDelUser interface.
type MockiDelUser struct {
	ctrl     *gomock.Controller
	recorder *MockiDelUserMockRecorder
}

// MockiDelUserMockRecorder is the mock recorder for MockiDelUser.
type MockiDelUserMockRecorder struct {
	mock *MockiDelUser
}

// NewMockiDelUser creates a new mock instance.
func NewMockiDelUser(ctrl *gomock.Controller) *MockiDelUser {
	mock := &MockiDelUser{ctrl: ctrl}
	mock.recorder = &MockiDelUserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiDelUser) EXPECT() *MockiDelUserMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockiDelUser) Process(l *zap.Logger, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", l, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Process indicates an expected call of Process.
func (mr *MockiDelUserMockRecorder) Process(l, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockiDelUser)(nil).Process), l, id)
}
