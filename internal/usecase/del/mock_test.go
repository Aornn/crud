// Code generated by MockGen. DO NOT EDIT.
// Source: delete.go

// Package del_test is a generated GoMock package.
package del_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockiDeleteUserFromDatabase is a mock of iDeleteUserFromDatabase interface.
type MockiDeleteUserFromDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockiDeleteUserFromDatabaseMockRecorder
}

// MockiDeleteUserFromDatabaseMockRecorder is the mock recorder for MockiDeleteUserFromDatabase.
type MockiDeleteUserFromDatabaseMockRecorder struct {
	mock *MockiDeleteUserFromDatabase
}

// NewMockiDeleteUserFromDatabase creates a new mock instance.
func NewMockiDeleteUserFromDatabase(ctrl *gomock.Controller) *MockiDeleteUserFromDatabase {
	mock := &MockiDeleteUserFromDatabase{ctrl: ctrl}
	mock.recorder = &MockiDeleteUserFromDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiDeleteUserFromDatabase) EXPECT() *MockiDeleteUserFromDatabaseMockRecorder {
	return m.recorder
}

// DeleteUser mocks base method.
func (m *MockiDeleteUserFromDatabase) DeleteUser(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser.
func (mr *MockiDeleteUserFromDatabaseMockRecorder) DeleteUser(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockiDeleteUserFromDatabase)(nil).DeleteUser), id)
}

// MockiDeleteUserFile is a mock of iDeleteUserFile interface.
type MockiDeleteUserFile struct {
	ctrl     *gomock.Controller
	recorder *MockiDeleteUserFileMockRecorder
}

// MockiDeleteUserFileMockRecorder is the mock recorder for MockiDeleteUserFile.
type MockiDeleteUserFileMockRecorder struct {
	mock *MockiDeleteUserFile
}

// NewMockiDeleteUserFile creates a new mock instance.
func NewMockiDeleteUserFile(ctrl *gomock.Controller) *MockiDeleteUserFile {
	mock := &MockiDeleteUserFile{ctrl: ctrl}
	mock.recorder = &MockiDeleteUserFileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiDeleteUserFile) EXPECT() *MockiDeleteUserFileMockRecorder {
	return m.recorder
}

// DeleteUser mocks base method.
func (m *MockiDeleteUserFile) DeleteUser(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser.
func (mr *MockiDeleteUserFileMockRecorder) DeleteUser(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockiDeleteUserFile)(nil).DeleteUser), id)
}
